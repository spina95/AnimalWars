{"ast":null,"code":"var _jsxFileName = \"D:\\\\Universit\\xE0\\\\Applicazione_web_e_mobile\\\\AnimalWars\\\\app\\\\frontend\\\\src\\\\Pages\\\\User\\\\User.js\";\nimport React, { Fragment } from 'react';\nimport NavBar from '../../Components/Navbar';\nimport { Image, ListGroup, Container, Card, Row, Col } from 'react-bootstrap';\nimport { currentUser } from '../../Utils/Authentication';\nimport './User.css';\nimport API from \"../../Utils/API\";\nimport Gallery from 'react-grid-gallery';\nimport showSpinner from '../../Components/Spinner';\n\nclass User extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.columnText = (value, title) => {\n      return /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        style: {\n          fontSize: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }, value), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }, title));\n    };\n\n    this.createTable = images => {\n      var IMAGES = [];\n      images.map(el => {\n        var a = {\n          src: el.image,\n          thumbnail: el.image,\n          thumbnailWidth: 200,\n          thumbnailHeight: 200\n        };\n        IMAGES.push(a);\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          paddingTop: \"30px\",\n          display: \"block\",\n          minHeight: \"1px\",\n          width: \"100%\",\n          overflow: \"auto\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Gallery, {\n        images: IMAGES,\n        enableLightbox: true,\n        enableImageSelection: false,\n        currentImageWillChange: this.onCurrentImageChange,\n        onClickImage: () => this.openImage(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }\n      }));\n    };\n\n    this.state = {\n      isLoading: true,\n      currentImage: 0,\n      user: null\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    var currentuser = currentUser();\n\n    if (params.user_id === currentuser.id) {\n      API.getUserImages(params.user_id).then(images => {\n        this.setState({\n          user: currentUser,\n          images: images,\n          isLoading: false\n        });\n      });\n    } else {\n      API.getImageUser(params.user_id).then(value => {\n        console.log(value);\n        API.getUserImages(params.user_id).then(images => {\n          this.setState({\n            user: value,\n            images: images,\n            isLoading: false\n          });\n        });\n      });\n    }\n  }\n\n  average(elements) {\n    var sum = 0;\n\n    for (var i = 0; i < elements.length; i++) {\n      sum += parseFloat(elements[i].score);\n    }\n\n    return sum / elements.length;\n  }\n\n  winlost(elements) {\n    var win = 0;\n    var lost = 0;\n\n    for (var i = 0; i < elements.length; i++) {\n      win += parseInt(elements[i].wins);\n      lost += parseInt(elements[i].lost);\n    }\n\n    return win.toString() + \"/\" + lost.toString();\n  }\n\n  onCurrentImageChange(index) {\n    this.setState({\n      currentImage: index\n    });\n  }\n\n  openImage() {\n    var index = this.state.currentImage;\n    var url = '/image/' + this.state.images[index].id;\n    console.log(this.state.images[index]);\n  }\n\n  render() {\n    if (this.state.isLoading == false) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(NavBar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App-home-page \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        className: \"App-home-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          flexDirection: 'column'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        src: this.state.user.profilepicture,\n        resizeMode: \"contain\",\n        width: \"150\",\n        height: \"150\",\n        style: {\n          borderRadius: 150 / 2\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(\"b\", {\n        style: {\n          fontSize: 24\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 33\n        }\n      }, this.state.user.first_name, \" \", this.state.user.last_name)), /*#__PURE__*/React.createElement(Row, {\n        style: {\n          alignItems: 'center',\n          justifyContent: 'center',\n          alignContent: 'space-between',\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }\n      }, this.columnText(this.state.images.length, \"posted\"), this.columnText(this.average(this.state.images).toFixed(3), \"score average\"), this.columnText(this.winlost(this.state.images), \"wins/lost\")), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }\n      }, this.createTable(this.state.images)))));\n    }\n\n    return /*#__PURE__*/React.createElement(\"showSpinner\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default User;","map":{"version":3,"sources":["D:/UniversitÃ /Applicazione_web_e_mobile/AnimalWars/app/frontend/src/Pages/User/User.js"],"names":["React","Fragment","NavBar","Image","ListGroup","Container","Card","Row","Col","currentUser","API","Gallery","showSpinner","User","Component","constructor","props","columnText","value","title","fontSize","createTable","images","IMAGES","map","el","a","src","image","thumbnail","thumbnailWidth","thumbnailHeight","push","paddingTop","display","minHeight","width","overflow","onCurrentImageChange","openImage","state","isLoading","currentImage","user","componentDidMount","match","params","currentuser","user_id","id","getUserImages","then","setState","getImageUser","console","log","average","elements","sum","i","length","parseFloat","score","winlost","win","lost","parseInt","wins","toString","index","url","render","alignItems","justifyContent","flexDirection","profilepicture","borderRadius","first_name","last_name","alignContent","textAlign","toFixed"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport NavBar  from '../../Components/Navbar'\r\nimport {Image, ListGroup, Container, Card, Row, Col }  from 'react-bootstrap'\r\nimport {currentUser} from '../../Utils/Authentication'\r\nimport './User.css'\r\nimport API from \"../../Utils/API\";\r\nimport Gallery from 'react-grid-gallery';\r\nimport showSpinner from '../../Components/Spinner';\r\n\r\nclass User extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            currentImage: 0,\r\n            user: null\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { match: { params } } = this.props;\r\n        var currentuser = currentUser()\r\n        if(params.user_id === currentuser.id) {\r\n            API.getUserImages(params.user_id).then((images) => {\r\n                this.setState({\r\n                    user: currentUser,\r\n                    images: images,\r\n                    isLoading: false\r\n                })\r\n            })\r\n        } else {\r\n            API.getImageUser(params.user_id).then((value) => {\r\n                console.log(value)\r\n                API.getUserImages(params.user_id).then((images) => {\r\n                    this.setState({\r\n                        user: value,\r\n                        images: images,\r\n                        isLoading: false\r\n                    })\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    columnText = (value, title) => {\r\n        return (\r\n            <Col>\r\n                <b style={{fontSize:20}}>{value}</b>\r\n                <div>{title}</div>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    average(elements){\r\n        var sum = 0;\r\n        for( var i = 0; i < elements.length; i++ ){\r\n            sum += parseFloat(elements[i].score); \r\n        }\r\n        return sum/elements.length;\r\n    }\r\n\r\n    winlost(elements){\r\n        var win = 0;\r\n        var lost = 0;\r\n        for( var i = 0; i < elements.length; i++ ){\r\n            win += parseInt(elements[i].wins); \r\n            lost += parseInt(elements[i].lost); \r\n        }\r\n        return win.toString() + \"/\" + lost.toString();\r\n    }\r\n\r\n    onCurrentImageChange(index) {\r\n        this.setState({ currentImage: index });\r\n    }\r\n\r\n    openImage(){\r\n        var index = this.state.currentImage\r\n        var url = '/image/' + this.state.images[index].id\r\n        console.log(this.state.images[index])\r\n        \r\n    }\r\n\r\n    createTable = (images) => {\r\n        var IMAGES = [];\r\n        images.map((el) => {\r\n            var a = {\r\n                src: el.image,\r\n                thumbnail: el.image,\r\n                thumbnailWidth: 200,\r\n                thumbnailHeight: 200\r\n            }\r\n            IMAGES.push(a)\r\n        })\r\n        return (\r\n            <div style={{\r\n                paddingTop: \"30px\",\r\n                display: \"block\",\r\n                minHeight: \"1px\",\r\n                width: \"100%\",\r\n                overflow: \"auto\"}}>\r\n                <Gallery\r\n                    images={IMAGES}\r\n                    enableLightbox={true}\r\n                    enableImageSelection={false}\r\n                    currentImageWillChange={this.onCurrentImageChange}\r\n                    onClickImage={() => this.openImage()}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        if(this.state.isLoading == false){\r\n            return(\r\n                <Fragment>\r\n                    <NavBar/>\r\n                    <div className=\"App-home-page \">\r\n                    <Container className=\"App-home-container\">\r\n                        <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection:'column'}}>      \r\n                                <Image \r\n                                    src={this.state.user.profilepicture}\r\n                                    resizeMode= 'contain'\r\n                                    width= \"150\"\r\n                                    height= \"150\"\r\n                                    style={{borderRadius: 150/ 2,}} \r\n                                />\r\n                                <b style={{fontSize: 24}}>{this.state.user.first_name} {this.state.user.last_name}</b>\r\n                        </div>\r\n                        <Row style={{alignItems: 'center', justifyContent: 'center', alignContent: 'space-between', textAlign:'center'}}>\r\n                            {this.columnText(this.state.images.length, \"posted\")}\r\n                            {this.columnText(this.average(this.state.images).toFixed(3), \"score average\")}\r\n                            {this.columnText(this.winlost(this.state.images), \"wins/lost\")}\r\n                        </Row>\r\n                        \r\n                        <div>{this.createTable(this.state.images)}</div>\r\n                  \r\n                    </Container>\r\n                    </div>\r\n                </Fragment>\r\n            )\r\n        }\r\n        return(\r\n            <showSpinner/>\r\n        )\r\n    }\r\n}\r\nexport default User"]},"metadata":{},"sourceType":"module"}