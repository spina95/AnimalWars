{"ast":null,"code":"var _jsxFileName = \"D:\\\\Universit\\xE0\\\\Applicazione_web_e_mobile\\\\AnimalWars\\\\app\\\\frontend\\\\src\\\\Pages\\\\Vote\\\\Vote.js\";\nimport React, { Fragment } from 'react';\nimport NavBar from '../../Components/Navbar';\nimport axios from 'axios';\nimport { Image, ListGroup, Container, Card, Row, Col } from 'react-bootstrap';\nimport API from \"../../Utils/API\";\nimport './Vote.css';\n\nclass Vote extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.columnText = (value, title) => {\n      return /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        style: {\n          fontSize: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }, value), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      }, title));\n    };\n\n    this.state = {\n      previmages: null,\n      images: null,\n      user1: null,\n      user2: null,\n      isLoading: true\n    };\n  }\n\n  loadImage() {\n    API.randomImages().then(value => {\n      var userRequests = [];\n      userRequests.push(API.getImageUser(value[0].user));\n      userRequests.push(API.getImageUser(value[1].user));\n      axios.all(userRequests).then(axios.spread((...responses) => {\n        console.log(responses);\n        this.setState({\n          images: value,\n          user1: responses[0],\n          user2: responses[1],\n          isLoading: false\n        });\n      }));\n    });\n  }\n\n  async componentDidMount() {\n    this.loadImage();\n  }\n\n  vote(index) {\n    var winner_id = 0;\n    var loser_id = 0;\n\n    if (index == 0) {\n      winner_id = this.state.images[0].id;\n      loser_id = this.state.images[1].id;\n    } else {\n      winner_id = this.state.images[1].id;\n      loser_id = this.state.images[0].id;\n    }\n\n    this.setState({\n      isLoading: true\n    });\n    API.vote(winner_id, loser_id).then(response => {\n      var images = this.state.images;\n      this.loadImage();\n      this.setState({\n        previmages: images\n      });\n    });\n  }\n\n  showPrevImages() {\n    if (this.state.previmages != null) {\n      return /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        style: {\n          fontSize: 18,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }\n      }, \"RESULTS\"), /*#__PURE__*/React.createElement(Row, {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          paddingTop: \"30px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        style: {\n          display: 'flex',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        className: \"vote-previmage\",\n        src: this.state.previmages[0].image,\n        onClick: () => this.vote(0),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }\n      }), this.columnText(\"16/20\", \"WIN/LOST\")), /*#__PURE__*/React.createElement(Col, {\n        style: {\n          display: 'flex',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        className: \"vote-previmage\",\n        src: this.state.previmages[1].image,\n        onClick: () => this.vote(1),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }\n      }), this.columnText(\"16/20\", \"WIN/LOST\"))));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    });\n  }\n\n  render() {\n    if (this.state.isLoading == false) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(NavBar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App-home-page \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        className: \"App-home-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }\n      }, this.showPrevImages(), /*#__PURE__*/React.createElement(Row, {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          paddingTop: \"30px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        style: {\n          fontSize: 28\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }\n      }, this.state.images[0].name, \"    vs    \", this.state.images[1].name)), /*#__PURE__*/React.createElement(Row, {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          paddingTop: \"30px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        className: \"vote-image\",\n        src: this.state.images[0].image,\n        onClick: () => this.vote(0),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Image, {\n        className: \"vote-image\",\n        src: this.state.images[1].image,\n        onClick: () => this.vote(1),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 29\n        }\n      })))));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 16\n      }\n    }, \"Loading\");\n  }\n\n}\n\nexport default Vote;","map":{"version":3,"sources":["D:/Universit√†/Applicazione_web_e_mobile/AnimalWars/app/frontend/src/Pages/Vote/Vote.js"],"names":["React","Fragment","NavBar","axios","Image","ListGroup","Container","Card","Row","Col","API","Vote","Component","constructor","props","columnText","value","title","fontSize","state","previmages","images","user1","user2","isLoading","loadImage","randomImages","then","userRequests","push","getImageUser","user","all","spread","responses","console","log","setState","componentDidMount","vote","index","winner_id","loser_id","id","response","showPrevImages","display","alignItems","justifyContent","paddingTop","image","render","name"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport NavBar  from '../../Components/Navbar'\r\nimport axios from 'axios'\r\nimport {Image, ListGroup, Container, Card, Row, Col }  from 'react-bootstrap'\r\nimport API from \"../../Utils/API\";\r\nimport './Vote.css'\r\nclass Vote extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            previmages: null,\r\n            images: null,\r\n            user1: null,\r\n            user2: null,\r\n            isLoading: true,\r\n        }\r\n    }\r\n\r\n    loadImage() {\r\n        API.randomImages().then(value => {\r\n            var userRequests = []\r\n            userRequests.push(API.getImageUser(value[0].user))\r\n            userRequests.push(API.getImageUser(value[1].user))\r\n            axios.all(userRequests).then(axios.spread((...responses) => {\r\n                console.log(responses)\r\n                this.setState({\r\n                    images: value,\r\n                    user1: responses[0],\r\n                    user2: responses[1],\r\n                    isLoading: false\r\n                })\r\n            }))\r\n        })\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.loadImage()\r\n    }\r\n\r\n    vote(index){\r\n        var winner_id = 0\r\n        var loser_id = 0\r\n        if(index == 0){\r\n            winner_id = this.state.images[0].id;\r\n            loser_id = this.state.images[1].id;\r\n        } else {\r\n            winner_id = this.state.images[1].id;\r\n            loser_id = this.state.images[0].id;\r\n        }\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n        API.vote(winner_id, loser_id).then(response => {\r\n            var images = this.state.images\r\n            this.loadImage()\r\n            this.setState({\r\n                previmages: images\r\n            })\r\n        })\r\n    }\r\n\r\n    columnText = (value, title) => {\r\n        return (\r\n            <Col>\r\n                <b style={{fontSize:20}}>{value}</b>\r\n                <div>{title}</div>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    showPrevImages(){\r\n        if(this.state.previmages != null){\r\n            return (\r\n                <Col>\r\n                    <b style={{fontSize:18, display: 'flex', alignItems: 'center', justifyContent: 'center'}}>RESULTS</b>\r\n                    <Row style={{display: 'flex', alignItems: 'center', justifyContent: 'center', paddingTop: \"30px\"}}>\r\n                        <Col style={{display: 'flex', justifyContent: 'center'}}>\r\n                            <Image className=\"vote-previmage\" src={this.state.previmages[0].image} onClick={() => this.vote(0)}/>\r\n                            {this.columnText(\"16/20\", \"WIN/LOST\")}\r\n                        </Col>\r\n                        <Col style={{display: 'flex', justifyContent: 'center'}}>\r\n                            <Image className=\"vote-previmage\" src={this.state.previmages[1].image} onClick={() => this.vote(1)}/>\r\n                            {this.columnText(\"16/20\", \"WIN/LOST\")}\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            )\r\n        }\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        if(this.state.isLoading == false){\r\n            return (\r\n                <Fragment>\r\n                    <NavBar/>\r\n                    <div className=\"App-home-page \">\r\n                    <Container className=\"App-home-container\">\r\n                        {this.showPrevImages()}\r\n                        <Row style={{display: 'flex', alignItems: 'center', justifyContent: 'center', paddingTop: \"30px\"}}> \r\n                            <b style={{fontSize:28}}>{this.state.images[0].name}    vs    {this.state.images[1].name}</b>\r\n                        </Row>\r\n                        <Row style={{display: 'flex', alignItems: 'center', justifyContent: 'center', paddingTop: \"30px\"}}>\r\n                            <Image className=\"vote-image\" src={this.state.images[0].image} onClick={() => this.vote(0)}/>\r\n                            <Image className=\"vote-image\" src={this.state.images[1].image} onClick={() => this.vote(1)}/>\r\n                        </Row>\r\n                    </Container>\r\n                    </div>\r\n                </Fragment>\r\n            )\r\n        }\r\n        return <div>Loading</div>\r\n    }\r\n}\r\nexport default Vote;"]},"metadata":{},"sourceType":"module"}