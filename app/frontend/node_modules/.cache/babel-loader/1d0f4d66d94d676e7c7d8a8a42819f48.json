{"ast":null,"code":"var _jsxFileName = \"D:\\\\Universit\\xE0\\\\Applicazione_web_e_mobile\\\\AnimalWars\\\\app\\\\frontend\\\\src\\\\Pages\\\\User\\\\User.js\";\nimport React, { Fragment } from 'react';\nimport NavBar from '../../Components/Navbar';\nimport { Image, ListGroup, Container, Card, Row, Col } from 'react-bootstrap';\nimport { currentUser } from '../../Utils/Authentication';\nimport Tile from './Tile';\nimport axios from 'axios';\nimport API from \"../../Utils/API\";\nimport Gallery from 'react-grid-gallery';\n\nclass User extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.columnText = (value, title) => {\n      return /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        style: {\n          fontSize: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, value), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }, title));\n    };\n\n    this.createTable = images => {\n      var IMAGE = [];\n      images.map(el => {\n        var a = {\n          src: el.image,\n          thumbnail: 'https://www.mandlpaints.com/wp-content/uploads/2018/09/Lead-Gray.jpg',\n          thumbnailWidth: 100,\n          thumbnailHeight: 100\n        };\n        IMAGE.push(a);\n      });\n      return /*#__PURE__*/React.createElement(Gallery, {\n        images: IMAGE,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      });\n    };\n\n    this.state = {\n      isLoading: true,\n      user: null\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    var currentuser = currentUser();\n\n    if (params.user_id === currentuser.id) {\n      API.getUserImages(params.user_id).then(images => {\n        this.setState({\n          user: currentUser,\n          images: images,\n          isLoading: false\n        });\n      });\n    } else {\n      API.getImageUser(params.user_id).then(value => {\n        console.log(value);\n        API.getUserImages(params.user_id).then(images => {\n          this.setState({\n            user: value,\n            images: images,\n            isLoading: false\n          });\n        });\n      });\n    }\n  }\n\n  average(elements) {\n    var sum = 0;\n\n    for (var i = 0; i < elements.length; i++) {\n      sum += parseFloat(elements[i].score);\n    }\n\n    return sum / elements.length;\n  }\n\n  winlost(elements) {\n    var win = 0;\n    var lost = 0;\n\n    for (var i = 0; i < elements.length; i++) {\n      win += parseInt(elements[i].wins);\n      lost += parseInt(elements[i].lost);\n    }\n\n    return win.toString() + \"/\" + lost.toString();\n  }\n\n  render() {\n    if (this.state.isLoading == false) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(NavBar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App-home-page \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        className: \"App-home-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          flexDirection: 'column'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        src: this.state.user.profilepicture,\n        style: {\n          width: 150,\n          height: 150,\n          borderRadius: 150 / 2\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(\"b\", {\n        style: {\n          fontSize: 24\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 33\n        }\n      }, this.state.user.first_name, \" \", this.state.user.last_name)), /*#__PURE__*/React.createElement(Row, {\n        style: {\n          alignItems: 'center',\n          justifyContent: 'center',\n          alignContent: 'space-between',\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }\n      }, this.columnText(this.state.images.length, \"posted\"), this.columnText(this.average(this.state.images).toFixed(3), \"score average\"), this.columnText(this.winlost(this.state.images), \"wins/lost\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tiles-grid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }\n      }, this.createTable(this.state.images)))));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, \"Loading\");\n  }\n\n}\n\nexport default User;","map":{"version":3,"sources":["D:/UniversitÃ /Applicazione_web_e_mobile/AnimalWars/app/frontend/src/Pages/User/User.js"],"names":["React","Fragment","NavBar","Image","ListGroup","Container","Card","Row","Col","currentUser","Tile","axios","API","Gallery","User","Component","constructor","props","columnText","value","title","fontSize","createTable","images","IMAGE","map","el","a","src","image","thumbnail","thumbnailWidth","thumbnailHeight","push","state","isLoading","user","componentDidMount","match","params","currentuser","user_id","id","getUserImages","then","setState","getImageUser","console","log","average","elements","sum","i","length","parseFloat","score","winlost","win","lost","parseInt","wins","toString","render","display","alignItems","justifyContent","flexDirection","profilepicture","width","height","borderRadius","first_name","last_name","alignContent","textAlign","toFixed"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport NavBar  from '../../Components/Navbar'\r\nimport {Image, ListGroup, Container, Card, Row, Col }  from 'react-bootstrap'\r\nimport {currentUser} from '../../Utils/Authentication'\r\nimport Tile from './Tile'\r\nimport axios from 'axios';\r\nimport API from \"../../Utils/API\";\r\nimport Gallery from 'react-grid-gallery';\r\n\r\nclass User extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            user: null\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { match: { params } } = this.props;\r\n        var currentuser = currentUser()\r\n        if(params.user_id === currentuser.id) {\r\n            API.getUserImages(params.user_id).then((images) => {\r\n                this.setState({\r\n                    user: currentUser,\r\n                    images: images,\r\n                    isLoading: false\r\n                })\r\n            })\r\n        } else {\r\n            API.getImageUser(params.user_id).then((value) => {\r\n                console.log(value)\r\n                API.getUserImages(params.user_id).then((images) => {\r\n                    this.setState({\r\n                        user: value,\r\n                        images: images,\r\n                        isLoading: false\r\n                    })\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    columnText = (value, title) => {\r\n        return (\r\n            <Col>\r\n                <b style={{fontSize:20}}>{value}</b>\r\n                <div>{title}</div>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    average(elements){\r\n        var sum = 0;\r\n        for( var i = 0; i < elements.length; i++ ){\r\n            sum += parseFloat(elements[i].score); \r\n        }\r\n        return sum/elements.length;\r\n    }\r\n\r\n    winlost(elements){\r\n        var win = 0;\r\n        var lost = 0;\r\n        for( var i = 0; i < elements.length; i++ ){\r\n            win += parseInt(elements[i].wins); \r\n            lost += parseInt(elements[i].lost); \r\n        }\r\n        return win.toString() + \"/\" + lost.toString();\r\n    }\r\n\r\n    createTable = (images) => {\r\n        var IMAGE = [];\r\n        images.map((el) => {\r\n            var a = {\r\n                src: el.image,\r\n                thumbnail: 'https://www.mandlpaints.com/wp-content/uploads/2018/09/Lead-Gray.jpg',\r\n                thumbnailWidth: 100,\r\n                thumbnailHeight: 100\r\n            }\r\n            IMAGE.push(a)\r\n        })\r\n        return (\r\n            <Gallery images={IMAGE}/>\r\n        );\r\n    }\r\n\r\n\r\n    render(){\r\n        if(this.state.isLoading == false){\r\n            return(\r\n                <Fragment>\r\n                    <NavBar/>\r\n                    <div className=\"App-home-page \">\r\n                    <Container className=\"App-home-container\">\r\n                        <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection:'column'}}>      \r\n                                <Image \r\n                                    src={this.state.user.profilepicture}\r\n                                    style={{width: 150, height: 150, borderRadius: 150/ 2,}} \r\n                                />\r\n                                <b style={{fontSize: 24}}>{this.state.user.first_name} {this.state.user.last_name}</b>\r\n                        </div>\r\n                        <Row style={{alignItems: 'center', justifyContent: 'center', alignContent: 'space-between', textAlign:'center'}}>\r\n                            {this.columnText(this.state.images.length, \"posted\")}\r\n                            {this.columnText(this.average(this.state.images).toFixed(3), \"score average\")}\r\n                            {this.columnText(this.winlost(this.state.images), \"wins/lost\")}\r\n                        </Row>\r\n                        <div className='tiles-grid'>\r\n                        {this.createTable(this.state.images)}\r\n                        </div>\r\n                    </Container>\r\n                    </div>\r\n                </Fragment>\r\n            )\r\n        }\r\n        return(\r\n            <div>Loading</div>\r\n        )\r\n    }\r\n}\r\nexport default User"]},"metadata":{},"sourceType":"module"}