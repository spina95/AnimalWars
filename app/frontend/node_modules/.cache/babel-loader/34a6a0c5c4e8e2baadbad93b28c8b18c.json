{"ast":null,"code":"var _jsxFileName = \"D:\\\\Universit\\xE0\\\\Applicazione_web_e_mobile\\\\AnimalWars\\\\app\\\\frontend\\\\src\\\\Pages\\\\User\\\\User.js\";\nimport React, { Fragment } from 'react';\nimport NavBar from '../../Components/Navbar';\nimport { Image, ListGroup, Container, Card, Row, Col } from 'react-bootstrap';\nimport { currentUser } from '../../Utils/Authentication';\nimport axios from 'axios';\nimport API from \"../../Utils/API\";\n\nclass User extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.columnText = (value, title) => {\n      return /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        style: {\n          fontSize: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, value), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, title));\n    };\n\n    this.state = {\n      isLoading: true,\n      user: null\n    };\n  }\n\n  average() {\n    var sum = 0;\n    var elements = this.state.images;\n\n    for (var i = 0; i < elements.length; i++) {\n      sum += parseInt(elements[i], 10);\n    }\n\n    return sum / elements.length;\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    var currentuser = currentUser();\n\n    if (params.user_id === currentuser.id) {\n      API.getUserImages(params.user_id).then(images => {\n        this.setState({\n          user: currentUser,\n          images: images,\n          isLoading: false\n        });\n      });\n    } else {\n      API.getImageUser(params.user_id).then(value => {\n        console.log(value);\n        API.getUserImages(params.user_id).then(images => {\n          this.setState({\n            user: value,\n            images: images,\n            isLoading: false\n          });\n        });\n      });\n    }\n  }\n\n  render() {\n    if (this.state.isLoading == false) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(NavBar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App-home-page \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        className: \"App-home-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          flexDirection: 'column'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        src: this.state.user.profilepicture,\n        style: {\n          width: 150,\n          height: 150,\n          borderRadius: 150 / 2\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(\"b\", {\n        style: {\n          fontSize: 24\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 33\n        }\n      }, this.state.user.first_name, \" \", this.state.user.last_name)), /*#__PURE__*/React.createElement(Row, {\n        style: {\n          alignItems: 'center',\n          justifyContent: 'center',\n          alignContent: 'space-between',\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }\n      }, this.columnText(this.state.images.length, \"posted\"), this.columnText(average(this.state.images), \"score average\"), this.columnText(\"13\", \"value\")))));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, \"Loading\");\n  }\n\n}\n\nexport default User;","map":{"version":3,"sources":["D:/Universit√†/Applicazione_web_e_mobile/AnimalWars/app/frontend/src/Pages/User/User.js"],"names":["React","Fragment","NavBar","Image","ListGroup","Container","Card","Row","Col","currentUser","axios","API","User","Component","constructor","props","columnText","value","title","fontSize","state","isLoading","user","average","sum","elements","images","i","length","parseInt","componentDidMount","match","params","currentuser","user_id","id","getUserImages","then","setState","getImageUser","console","log","render","display","alignItems","justifyContent","flexDirection","profilepicture","width","height","borderRadius","first_name","last_name","alignContent","textAlign"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport NavBar  from '../../Components/Navbar'\r\nimport {Image, ListGroup, Container, Card, Row, Col }  from 'react-bootstrap'\r\nimport {currentUser} from '../../Utils/Authentication'\r\nimport axios from 'axios';\r\nimport API from \"../../Utils/API\";\r\n\r\nclass User extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            user: null\r\n        };\r\n    }\r\n\r\n    average(){\r\n        var sum = 0;\r\n        var elements = this.state.images\r\n        for( var i = 0; i < elements.length; i++ ){\r\n            sum += parseInt( elements[i], 10 ); \r\n        }\r\n        return sum/elements.length;\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { match: { params } } = this.props;\r\n        var currentuser = currentUser()\r\n        if(params.user_id === currentuser.id) {\r\n            API.getUserImages(params.user_id).then((images) => {\r\n                this.setState({\r\n                    user: currentUser,\r\n                    images: images,\r\n                    isLoading: false\r\n                })\r\n            })\r\n        } else {\r\n            API.getImageUser(params.user_id).then((value) => {\r\n                console.log(value)\r\n                API.getUserImages(params.user_id).then((images) => {\r\n                    this.setState({\r\n                        user: value,\r\n                        images: images,\r\n                        isLoading: false\r\n                    })\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    columnText = (value, title) => {\r\n        return (\r\n            <Col>\r\n                <b style={{fontSize:20}}>{value}</b>\r\n                <div>{title}</div>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n\r\n    render(){\r\n        if(this.state.isLoading == false){\r\n            return(\r\n                <Fragment>\r\n                    <NavBar/>\r\n                    <div className=\"App-home-page \">\r\n                    <Container className=\"App-home-container\">\r\n                        <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection:'column'}}>\r\n                                           \r\n                                <Image \r\n                                    src={this.state.user.profilepicture}\r\n                                    style={{width: 150, height: 150, borderRadius: 150/ 2,}} \r\n                                />\r\n                                <b style={{fontSize: 24}}>{this.state.user.first_name} {this.state.user.last_name}</b>\r\n                        </div>\r\n                        <Row style={{alignItems: 'center', justifyContent: 'center', alignContent: 'space-between', textAlign:'center'}}>\r\n                            {this.columnText(this.state.images.length, \"posted\")}\r\n                            {this.columnText(average(this.state.images), \"score average\")}\r\n                            {this.columnText(\"13\", \"value\")}\r\n                        </Row>\r\n                    </Container>\r\n                    </div>\r\n                </Fragment>\r\n            )\r\n        }\r\n        return(\r\n            <div>Loading</div>\r\n        )\r\n    }\r\n}\r\nexport default User"]},"metadata":{},"sourceType":"module"}