{"ast":null,"code":"import request from './Request';\nconst TOKEN_KEY = 'jwt';\nconst APIService = {\n  getUserData() {\n    // Return current user data\n    const token = localStorage.getItem(TOKEN_KEY);\n    return request({\n      url: '/users/rest-auth/user/',\n      method: 'GET',\n      headers: {\n        \"Authorization\": 'Token ' + token\n      }\n    });\n  },\n\n  getHighestScoreImages() {\n    // Return images with higher score\n    const token = localStorage.getItem(TOKEN_KEY);\n    return request({\n      url: '/images/higherscore',\n      method: 'GET',\n      headers: {\n        \"Authorization\": 'Token ' + token\n      }\n    });\n  },\n\n  getImageUser(user_id) {\n    // Return user data of an image\n    const token = localStorage.getItem(TOKEN_KEY);\n    return request({\n      url: '/images/imageuser',\n      method: 'GET',\n      headers: {\n        \"Authorization\": 'Token ' + token\n      },\n      params: {\n        user_id: user_id\n      }\n    });\n  },\n\n  getUserImages(user_id) {\n    // Return images of an user\n    const token = localStorage.getItem(TOKEN_KEY);\n    return request({\n      url: '/images/profileimages',\n      method: 'GET',\n      headers: {\n        \"Authorization\": 'Token ' + token\n      },\n      params: {\n        profile_id: user_id\n      }\n    });\n  },\n\n  imageTags(image_id) {\n    // Return tags of an image\n    const token = localStorage.getItem(TOKEN_KEY);\n    return request({\n      url: '/images/imageTags',\n      method: 'GET',\n      headers: {\n        \"Authorization\": 'Token ' + token\n      },\n      params: {\n        image_id: image_id\n      }\n    });\n  },\n\n  randomImages() {\n    // Return two random images\n    const token = localStorage.getItem(TOKEN_KEY);\n    return request({\n      url: '/images/randomImages',\n      method: 'GET',\n      headers: {\n        \"Authorization\": 'Token ' + token\n      }\n    });\n  },\n\n  vote(winner_id, loser_id) {\n    // Return two random images\n    const token = localStorage.getItem(TOKEN_KEY);\n    return request({\n      url: '/images/vote',\n      method: 'POST',\n      headers: {\n        \"Authorization\": 'Token ' + token\n      },\n      params: {\n        'winner_id': winner_id,\n        'loser_id': loser_id\n      }\n    });\n  }\n\n};\nexport default APIService;","map":{"version":3,"sources":["D:/Universit√†/Applicazione_web_e_mobile/AnimalWars/app/frontend/src/Utils/API.js"],"names":["request","TOKEN_KEY","APIService","getUserData","token","localStorage","getItem","url","method","headers","getHighestScoreImages","getImageUser","user_id","params","getUserImages","profile_id","imageTags","image_id","randomImages","vote","winner_id","loser_id"],"mappings":"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","sourcesContent":["import request from './Request'\r\n\r\nconst TOKEN_KEY = 'jwt';\r\n\r\nconst APIService = {\r\n\r\n  getUserData() {\r\n    // Return current user data\r\n    const token = localStorage.getItem(TOKEN_KEY)\r\n    return request({\r\n      url: '/users/rest-auth/user/',\r\n      method: 'GET',\r\n      headers: {\"Authorization\": 'Token ' + token}\r\n    });\r\n  }, \r\n\r\n  getHighestScoreImages() {\r\n    // Return images with higher score\r\n    const token = localStorage.getItem(TOKEN_KEY)\r\n    return request({\r\n      url: '/images/higherscore',\r\n      method: 'GET',\r\n      headers: {\"Authorization\": 'Token ' + token}\r\n    });\r\n  }, \r\n\r\n  getImageUser(user_id) {\r\n    // Return user data of an image\r\n    const token = localStorage.getItem(TOKEN_KEY)\r\n    return request({\r\n      url: '/images/imageuser',\r\n      method: 'GET',\r\n      headers: {\"Authorization\": 'Token ' + token},\r\n      params: {user_id: user_id},\r\n    });\r\n  }, \r\n\r\n  getUserImages(user_id) {\r\n    // Return images of an user\r\n    const token = localStorage.getItem(TOKEN_KEY)\r\n    return request({\r\n      url: '/images/profileimages',\r\n      method: 'GET',\r\n      headers: {\"Authorization\": 'Token ' + token},\r\n      params: {profile_id: user_id},\r\n    });\r\n  }, \r\n\r\n  imageTags(image_id) {\r\n    // Return tags of an image\r\n    const token = localStorage.getItem(TOKEN_KEY)\r\n    return request({\r\n      url: '/images/imageTags',\r\n      method: 'GET',\r\n      headers: {\"Authorization\": 'Token ' + token},\r\n      params: {image_id: image_id},\r\n    });\r\n  }, \r\n\r\n  randomImages() {\r\n    // Return two random images\r\n    const token = localStorage.getItem(TOKEN_KEY)\r\n    return request({\r\n      url: '/images/randomImages',\r\n      method: 'GET',\r\n      headers: {\"Authorization\": 'Token ' + token},\r\n    });\r\n  }, \r\n\r\n  vote(winner_id, loser_id) {\r\n    // Return two random images\r\n    const token = localStorage.getItem(TOKEN_KEY)\r\n    return request({\r\n      url: '/images/vote',\r\n      method: 'POST',\r\n      headers: {\"Authorization\": 'Token ' + token},\r\n      params: {'winner_id': winner_id, 'loser_id': loser_id}\r\n    });\r\n  }, \r\n\r\n}\r\n\r\nexport default APIService;"]},"metadata":{},"sourceType":"module"}