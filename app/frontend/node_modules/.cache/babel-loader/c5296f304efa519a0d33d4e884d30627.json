{"ast":null,"code":"import axios from 'axios';\nconst client = axios.create({\n  baseURL: \"http://192.168.1.165:8000\",\n  responseType: \"json\"\n});\nclient.defaults.xsrfHeaderName = \"X-CSRFToken\";\nclient.defaults.xsrfCookieName = \"csrftoken\";\nclient.defaults.withCredentials = true;\n/**\r\n * Request Wrapper with default success/error actions\r\n */\n\nconst request = function (options) {\n  const onSuccess = function (response) {\n    console.debug('Request Successful!', response);\n    return response.data;\n  };\n\n  const onError = function (error) {\n    console.error('Request Failed:', error.config);\n\n    if (error.response) {\n      // Request was made but server responded with something\n      // other than 2xx\n      console.error('Status:', error.response.status);\n      console.error('Data:', error.response.data);\n      console.error('Headers:', error.response.headers);\n    } else {\n      // Something else happened while setting up the request\n      // triggered the error\n      console.error('Error Message:', error.message);\n    }\n\n    return Promise.reject(error.response || error.message);\n  };\n\n  return client(options).then(onSuccess).catch(onError);\n};\n\nexport default request;","map":{"version":3,"sources":["D:/Universit√†/Applicazione_web_e_mobile/AnimalWars/app/frontend/src/Utils/Request.js"],"names":["axios","client","create","baseURL","responseType","defaults","xsrfHeaderName","xsrfCookieName","withCredentials","request","options","onSuccess","response","console","debug","data","onError","error","config","status","headers","message","Promise","reject","then","catch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,MAAM,GAAGD,KAAK,CAACE,MAAN,CAAa;AACxBC,EAAAA,OAAO,EAAE,2BADe;AAExBC,EAAAA,YAAY,EAAE;AAFU,CAAb,CAAf;AAKAH,MAAM,CAACI,QAAP,CAAgBC,cAAhB,GAAiC,aAAjC;AACAL,MAAM,CAACI,QAAP,CAAgBE,cAAhB,GAAiC,WAAjC;AACAN,MAAM,CAACI,QAAP,CAAgBG,eAAhB,GAAkC,IAAlC;AAEA;;;;AAGA,MAAMC,OAAO,GAAG,UAASC,OAAT,EAAkB;AAC9B,QAAMC,SAAS,GAAG,UAASC,QAAT,EAAmB;AACjCC,IAAAA,OAAO,CAACC,KAAR,CAAc,qBAAd,EAAqCF,QAArC;AACA,WAAOA,QAAQ,CAACG,IAAhB;AACH,GAHD;;AAKA,QAAMC,OAAO,GAAG,UAASC,KAAT,EAAgB;AAC5BJ,IAAAA,OAAO,CAACI,KAAR,CAAc,iBAAd,EAAiCA,KAAK,CAACC,MAAvC;;AAEA,QAAID,KAAK,CAACL,QAAV,EAAoB;AACpB;AACA;AACAC,MAAAA,OAAO,CAACI,KAAR,CAAc,SAAd,EAA0BA,KAAK,CAACL,QAAN,CAAeO,MAAzC;AACAN,MAAAA,OAAO,CAACI,KAAR,CAAc,OAAd,EAA0BA,KAAK,CAACL,QAAN,CAAeG,IAAzC;AACAF,MAAAA,OAAO,CAACI,KAAR,CAAc,UAAd,EAA0BA,KAAK,CAACL,QAAN,CAAeQ,OAAzC;AAEC,KAPD,MAOO;AACP;AACA;AACAP,MAAAA,OAAO,CAACI,KAAR,CAAc,gBAAd,EAAgCA,KAAK,CAACI,OAAtC;AACC;;AAED,WAAOC,OAAO,CAACC,MAAR,CAAeN,KAAK,CAACL,QAAN,IAAkBK,KAAK,CAACI,OAAvC,CAAP;AACH,GAjBD;;AAmBA,SAAOpB,MAAM,CAACS,OAAD,CAAN,CACMc,IADN,CACWb,SADX,EAEMc,KAFN,CAEYT,OAFZ,CAAP;AAGC,CA5BL;;AA8BA,eAAeP,OAAf","sourcesContent":["import axios from 'axios'\r\n\r\nconst client = axios.create({\r\n    baseURL: \"http://192.168.1.165:8000\",\r\n    responseType: \"json\"\r\n  });\r\n\r\nclient.defaults.xsrfHeaderName = \"X-CSRFToken\";\r\nclient.defaults.xsrfCookieName = \"csrftoken\";\r\nclient.defaults.withCredentials = true;\r\n  \r\n/**\r\n * Request Wrapper with default success/error actions\r\n */\r\nconst request = function(options) {\r\n    const onSuccess = function(response) {\r\n        console.debug('Request Successful!', response);\r\n        return response.data;\r\n    }\r\n\r\n    const onError = function(error) {\r\n        console.error('Request Failed:', error.config);\r\n\r\n        if (error.response) {\r\n        // Request was made but server responded with something\r\n        // other than 2xx\r\n        console.error('Status:',  error.response.status);\r\n        console.error('Data:',    error.response.data);\r\n        console.error('Headers:', error.response.headers);\r\n\r\n        } else {\r\n        // Something else happened while setting up the request\r\n        // triggered the error\r\n        console.error('Error Message:', error.message);\r\n        }\r\n\r\n        return Promise.reject(error.response || error.message);\r\n    }\r\n\r\n    return client(options)\r\n                .then(onSuccess)\r\n                .catch(onError);\r\n    }\r\n\r\nexport default request;"]},"metadata":{},"sourceType":"module"}