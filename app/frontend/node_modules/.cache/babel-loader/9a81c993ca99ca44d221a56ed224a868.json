{"ast":null,"code":"var _jsxFileName = \"D:\\\\Universit\\xE0\\\\Applicazione_web_e_mobile\\\\AnimalWars\\\\app\\\\frontend\\\\src\\\\Pages\\\\Image\\\\Image.js\";\nimport React, { Fragment } from 'react';\nimport NavBar from '../../Components/Navbar';\nimport { Image, Button, Container, Card, Row, Col } from 'react-bootstrap';\nimport API from \"../../Utils/API\";\nimport { currentUser } from '../../Utils/Authentication';\n\nclass ImageInfo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.columnText = (value, title) => {\n      return /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        style: {\n          fontSize: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }, value), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }, title));\n    };\n\n    this.state = {\n      isLoading: true,\n      image: null,\n      tags: null\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    var image_id = params.image_id;\n    API.getImageInfo(image_id).then(response => {\n      console.log(response);\n      API.imageTags(image_id).then(tags => {\n        this.setState({\n          image: response,\n          tags: tags,\n          isLoading: false\n        });\n      });\n    });\n  }\n\n  winlost(element) {\n    var win = element.wins;\n    var lost = element.lost;\n    return win.toString() + \"/\" + lost.toString();\n  }\n\n  date(element) {\n    var d = new Date(element.uploaded_at);\n    var month = new Array();\n    month[0] = \"Jan\";\n    month[1] = \"Feb\";\n    month[2] = \"Mar\";\n    month[3] = \"Apr\";\n    month[4] = \"May\";\n    month[5] = \"Jun\";\n    month[6] = \"Jul\";\n    month[7] = \"Aug\";\n    month[8] = \"Sep\";\n    month[9] = \"Oct\";\n    month[10] = \"Nov\";\n    month[11] = \"Dec\";\n    var n = month[d.getMonth()];\n    return d.getDate() + \" \" + month[d.getMonth()] + \" \" + d.getFullYear();\n  }\n\n  tags() {\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, this.state.tags.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: 14,\n        border: 'solid',\n        borderWidth: 1,\n        borderRadius: 15,\n        borderColor: 'black',\n        padding: '2px 8px 2px 8px',\n        marginLeft: '4px',\n        marginRight: '4px',\n        marginBottom: '8px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, item.name)));\n  }\n\n  removeImage() {\n    var url = '/user/' + currentUser().id;\n    API.removeImage(this.state.image.id).then(response => {\n      this.props.history.push(url);\n    });\n  }\n\n  delete() {\n    if (this.state.image.user == currentUser().id) {\n      return /*#__PURE__*/React.createElement(Button, {\n        variant: \"danger\",\n        onClick: () => this.removeImage(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }, \"Remove\");\n    }\n  }\n\n  render() {\n    if (this.state.isLoading == false) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(NavBar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App-home-page \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        className: \"App-home-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          flexDirection: 'column'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        style: {\n          fontSize: 24,\n          paddingBottom: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 29\n        }\n      }, this.state.image.name), this.tags()), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          flexDirection: 'column'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        style: {\n          fontSize: 24,\n          paddingBottom: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 29\n        }\n      }, this.state.image.name), this.tags()), /*#__PURE__*/React.createElement(Row, {\n        style: {\n          paddingTop: \"20px\",\n          alignItems: 'center',\n          justifyContent: 'center',\n          alignContent: 'space-between',\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }\n      }, this.columnText(this.state.image.score.toFixed(3), \"score\"), this.columnText(this.winlost(this.state.image), \"win/lost\"), this.columnText(this.date(this.state.image), \"posted date\")), /*#__PURE__*/React.createElement(Image, {\n        src: this.state.image.image,\n        width: \"100%\",\n        style: {\n          paddingBottom: \"20px\",\n          paddingTop: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Row, {\n        style: {\n          paddingTop: \"20px\",\n          alignItems: 'center',\n          justifyContent: 'center',\n          alignContent: 'space-between',\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }\n      }, this.delete()))));\n    }\n\n    return /*#__PURE__*/React.createElement(\"showSpinner\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default ImageInfo;","map":{"version":3,"sources":["D:/Universit√†/Applicazione_web_e_mobile/AnimalWars/app/frontend/src/Pages/Image/Image.js"],"names":["React","Fragment","NavBar","Image","Button","Container","Card","Row","Col","API","currentUser","ImageInfo","Component","constructor","props","columnText","value","title","fontSize","state","isLoading","image","tags","componentDidMount","match","params","image_id","getImageInfo","then","response","console","log","imageTags","setState","winlost","element","win","wins","lost","toString","date","d","Date","uploaded_at","month","Array","n","getMonth","getDate","getFullYear","map","item","index","border","borderWidth","borderRadius","borderColor","padding","marginLeft","marginRight","marginBottom","name","removeImage","url","id","history","push","delete","user","render","display","alignItems","justifyContent","flexDirection","paddingBottom","paddingTop","alignContent","textAlign","score","toFixed"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport NavBar  from '../../Components/Navbar'\r\nimport {Image, Button, Container, Card, Row, Col }  from 'react-bootstrap'\r\nimport API from \"../../Utils/API\";\r\nimport {currentUser} from '../../Utils/Authentication'\r\n\r\nclass ImageInfo extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            image: null,\r\n            tags: null\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { match: { params } } = this.props;\r\n        var image_id = params.image_id\r\n        API.getImageInfo(image_id).then(response => {\r\n            console.log(response);\r\n            \r\n            API.imageTags(image_id).then(tags => {\r\n                this.setState({\r\n                    image: response,\r\n                    tags: tags,\r\n                    isLoading: false\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    winlost(element){\r\n        var win = element.wins;\r\n        var lost = element.lost;\r\n        return win.toString() + \"/\" + lost.toString();\r\n    }\r\n\r\n    date(element){\r\n        var d = new Date(element.uploaded_at);\r\n        var month = new Array();\r\n        month[0] = \"Jan\";\r\n        month[1] = \"Feb\";\r\n        month[2] = \"Mar\";\r\n        month[3] = \"Apr\";\r\n        month[4] = \"May\";\r\n        month[5] = \"Jun\";\r\n        month[6] = \"Jul\";\r\n        month[7] = \"Aug\";\r\n        month[8] = \"Sep\";\r\n        month[9] = \"Oct\";\r\n        month[10] = \"Nov\";\r\n        month[11] = \"Dec\";\r\n        var n = month[d.getMonth()];\r\n        return d.getDate() + \" \" + month[d.getMonth()] + \" \" + d.getFullYear()\r\n    }\r\n\r\n    columnText = (value, title) => {\r\n        return (\r\n            <Col>\r\n                <b style={{fontSize:20}}>{value}</b>\r\n                <div>{title}</div>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    tags() {\r\n        return (<Row>{\r\n            this.state.tags.map((item, index) => (\r\n                <div style={{ \r\n                    fontSize: 14,\r\n                    border:'solid',\r\n                    borderWidth: 1, \r\n                    borderRadius: 15,\r\n                    borderColor: 'black',\r\n                    padding: '2px 8px 2px 8px',\r\n                    marginLeft: '4px',\r\n                    marginRight: '4px',\r\n                    marginBottom: '8px'\r\n                    }}>\r\n                    {item.name}\r\n                </div>\r\n            ))}\r\n        </Row>)\r\n    }\r\n\r\n    removeImage(){\r\n        var url = '/user/' + currentUser().id\r\n        API.removeImage(this.state.image.id).then((response) => {\r\n            this.props.history.push(url);\r\n        })\r\n    }\r\n\r\n    delete(){\r\n        if(this.state.image.user == currentUser().id){\r\n            return (\r\n                <Button variant=\"danger\" onClick={() => this.removeImage()}>Remove</Button>\r\n            )\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.isLoading == false){\r\n            return(\r\n                <Fragment>\r\n                    <NavBar/>\r\n                    <div className=\"App-home-page \">\r\n                    <Container className=\"App-home-container\">\r\n                        <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection:'column'}}>\r\n                            <b style={{fontSize:24, paddingBottom: 20}}>{this.state.image.name}</b>\r\n                            {this.tags()}\r\n                        </div>\r\n                        <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection:'column'}}>\r\n                            <b style={{fontSize:24, paddingBottom: 20}}>{this.state.image.name}</b>\r\n                            {this.tags()}\r\n                        </div>\r\n                        <Row style={{paddingTop: \"20px\", alignItems: 'center', justifyContent: 'center', alignContent: 'space-between', textAlign:'center'}}>\r\n                            {this.columnText(this.state.image.score.toFixed(3), \"score\")}\r\n                            {this.columnText(this.winlost(this.state.image), \"win/lost\")}\r\n                            {this.columnText(this.date(this.state.image), \"posted date\")}\r\n                        </Row>\r\n                        <Image src={this.state.image.image} width=\"100%\" style={{paddingBottom:\"20px\", paddingTop:\"20px\"}}/>\r\n                        <Row style={{paddingTop: \"20px\", alignItems: 'center', justifyContent: 'center', alignContent: 'space-between', textAlign:'center'}}>\r\n                            {this.delete()}\r\n                        </Row>\r\n                        \r\n                    </Container>\r\n                    </div>\r\n                </Fragment>\r\n            )\r\n        }\r\n        return(\r\n            <showSpinner/>\r\n        )\r\n    }\r\n}\r\nexport default ImageInfo"]},"metadata":{},"sourceType":"module"}