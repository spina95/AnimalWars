{"ast":null,"code":"var _jsxFileName = \"D:\\\\Universit\\xE0\\\\Applicazione_web_e_mobile\\\\AnimalWars\\\\app\\\\frontend\\\\src\\\\Pages\\\\Image\\\\Image.js\";\nimport React, { Fragment } from 'react';\nimport NavBar from '../../Components/Navbar';\nimport { Image, ListGroup, Container, Card, Row, Col } from 'react-bootstrap';\nimport API from \"../../Utils/API\";\n\nclass ImageInfo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.columnText = (value, title) => {\n      return /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        style: {\n          fontSize: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }, value), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      }, title));\n    };\n\n    this.state = {\n      isLoading: true,\n      image: null,\n      tags: null\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    var image_id = params.image_id;\n    API.getImageInfo(image_id).then(response => {\n      API.imageTags(image_id).then(tags => {\n        this.setState({\n          image: response,\n          tags: tags,\n          isLoading: false\n        });\n      });\n    });\n  }\n\n  winlost(element) {\n    var win = element.wins;\n    var lost = element.lost;\n    return win.toString() + \"/\" + lost.toString();\n  }\n\n  date(element) {\n    var d = new Date(element.uploaded_at);\n    var month = new Array();\n    month[0] = \"Jan\";\n    month[1] = \"Feb\";\n    month[2] = \"Mar\";\n    month[3] = \"Apr\";\n    month[4] = \"May\";\n    month[5] = \"Jun\";\n    month[6] = \"Jul\";\n    month[7] = \"Aug\";\n    month[8] = \"Sep\";\n    month[9] = \"Oct\";\n    month[10] = \"Nov\";\n    month[11] = \"Dec\";\n    var n = month[d.getMonth()];\n    return d.getDate() + \" \" + month[d.getMonth()] + \" \" + d.getFullYear();\n  }\n\n  render() {\n    if (this.state.isLoading == false) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(NavBar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App-home-page \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        className: \"App-home-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          flexDirection: 'column'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        style: {\n          fontSize: 24\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }\n      }, this.state.image.name), /*#__PURE__*/React.createElement(Image, {\n        src: this.state.image.image,\n        width: \"100%\",\n        style: {\n          paddingBottom: \"20px\",\n          paddingTop: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Row, {\n        style: {\n          alignItems: 'center',\n          justifyContent: 'center',\n          alignContent: 'space-between',\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }\n      }, this.columnText(this.state.image.score.toFixed(3), \"score\"), this.columnText(this.winlost(this.state.image), \"win/lost\"), this.columnText(this.date(this.state.image), \"posted date\")))));\n    }\n\n    return /*#__PURE__*/React.createElement(\"showSpinner\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default ImageInfo;","map":{"version":3,"sources":["D:/Universit√†/Applicazione_web_e_mobile/AnimalWars/app/frontend/src/Pages/Image/Image.js"],"names":["React","Fragment","NavBar","Image","ListGroup","Container","Card","Row","Col","API","ImageInfo","Component","constructor","props","columnText","value","title","fontSize","state","isLoading","image","tags","componentDidMount","match","params","image_id","getImageInfo","then","response","imageTags","setState","winlost","element","win","wins","lost","toString","date","d","Date","uploaded_at","month","Array","n","getMonth","getDate","getFullYear","render","display","alignItems","justifyContent","flexDirection","name","paddingBottom","paddingTop","alignContent","textAlign","score","toFixed"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport NavBar  from '../../Components/Navbar'\r\nimport {Image, ListGroup, Container, Card, Row, Col }  from 'react-bootstrap'\r\nimport API from \"../../Utils/API\";\r\n\r\nclass ImageInfo extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            image: null,\r\n            tags: null\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { match: { params } } = this.props;\r\n        var image_id = params.image_id\r\n        API.getImageInfo(image_id).then(response => {\r\n            API.imageTags(image_id).then(tags => {\r\n                this.setState({\r\n                    image: response,\r\n                    tags: tags,\r\n                    isLoading: false\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    winlost(element){\r\n        var win = element.wins;\r\n        var lost = element.lost;\r\n        return win.toString() + \"/\" + lost.toString();\r\n    }\r\n\r\n    date(element){\r\n        var d = new Date(element.uploaded_at);\r\n        var month = new Array();\r\n        month[0] = \"Jan\";\r\n        month[1] = \"Feb\";\r\n        month[2] = \"Mar\";\r\n        month[3] = \"Apr\";\r\n        month[4] = \"May\";\r\n        month[5] = \"Jun\";\r\n        month[6] = \"Jul\";\r\n        month[7] = \"Aug\";\r\n        month[8] = \"Sep\";\r\n        month[9] = \"Oct\";\r\n        month[10] = \"Nov\";\r\n        month[11] = \"Dec\";\r\n        var n = month[d.getMonth()];\r\n        return d.getDate() + \" \" + month[d.getMonth()] + \" \" + d.getFullYear()\r\n    }\r\n\r\n    columnText = (value, title) => {\r\n        return (\r\n            <Col>\r\n                <b style={{fontSize:20}}>{value}</b>\r\n                <div>{title}</div>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        if(this.state.isLoading == false){\r\n            return(\r\n                <Fragment>\r\n                    <NavBar/>\r\n                    <div className=\"App-home-page \">\r\n                    <Container className=\"App-home-container\">\r\n                        <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection:'column'}}>\r\n                            <b style={{fontSize:24}}>{this.state.image.name}</b>\r\n                            <Image src={this.state.image.image} width=\"100%\" style={{paddingBottom:\"20px\", paddingTop:\"20px\"}}/>\r\n                        </div>\r\n                        <Row style={{alignItems: 'center', justifyContent: 'center', alignContent: 'space-between', textAlign:'center'}}>\r\n                            {this.columnText(this.state.image.score.toFixed(3), \"score\")}\r\n                            {this.columnText(this.winlost(this.state.image), \"win/lost\")}\r\n                            {this.columnText(this.date(this.state.image), \"posted date\")}\r\n                        </Row>\r\n                    </Container>\r\n                    </div>\r\n                </Fragment>\r\n            )\r\n        }\r\n        return(\r\n            <showSpinner/>\r\n        )\r\n    }\r\n}\r\nexport default ImageInfo"]},"metadata":{},"sourceType":"module"}